Протоколы:
TCP перед отправкой потока данных создается соединение, данные точно передадутся, последовательность данных сохраняется.
Выглядит это как текстовый файл, можно вычитать один символ из него, потом несколько, например. (Это дял удобство)
UDP пакеты могут быть отправлены в пустоту, последовательность не сохраняется.
--------
TLV (type length value) вид сообщений, которые будут отправляться по tcp или udp. Первые 2 байта type, следующие 2 байта length.
--------

Стуруктура:
Роутер и клиент.
Хаб - сервер, общее звено. Он хранит информацию о роутерах и серверах, периодически выгружает её в бд, осуществляет связь между всеми элементами системы.
Сервер - к нему подключаются клиент и роутер. Через него будет происходить управление роутером при помощи rcp.
-------- 
Подключение роутера к хабу:
Роутер отправляет по udp протоколу свои данные на хаб(mac, uptime и др.) раз в 20c. Хаб принимает, обрабатывает пакеты, и сохраняет или обновляет данные.
 
Проверка не подделали ли данные роутера:
В первый раз как хаб получит значение от роутера, он сгенерирует и сообщит ему секретный ключ.
Роутер должен будет отправлять этот ключ перед своими данными. Если ключ не совпадет, то хаб будет игнорировать запросы с данного роутера.
Периодически секретный ключ для каждого роутера будет обновляться.
 
Информация о серверах:
Сервера будут отправлять данные о том на сколько они загружены на хаб раз в 20c по udp.
 
Подключение клиента к серверу для управления роутером:
Клиент посылает http запрос на белый ip хаба, с информацией к какому роутеру хочет подключиться (Позже сделаю личный кабинет, в котором у клиента будет список его устройств, к которым он может подключаться).
Хаб проверяет есть ли в списке такой роутер.
Если роутера нет, или он давно не присылал пакеты, то оповещает клиента.
Если все хорошо, то хаб запоминает, что с роутером хотят связаться. На каждый udp запрос роутера он будет посылать ответ (По типу: "Подключись ко мне по tcp") .
Роутер, получив такое сообщение, подключается к хабу по tcp.
При каждом tcp подключении сразу будет устанавливаться rsa криптография.
После хаб проверяет список серверов, выбирает наименее загруженный и устанавливает tcp соединение с ним.
Хаб сообщает серверу данные роутера, который в скором времени подключиться к нему, и резервирует одно место.
После сообщает роутеру ip данного сервера (по tcp).
Далее соединение между хабом и роутером разрывается и роутер подключается по tcp к серверу.
Сервер проверяет тот ли роутер подключился и сообщает хабу результат.
Если все хорошо, то хаб сообщает клиенту ip сервера (по http), на который ему нужно подключиться.
Далее соединение между хабом и сервером разрывается.
Клиент устанавливает соединение с сервером, куда уже подключен роутер.
Управление роутером будет происходить через rpc.

без tagrpc а jsonrpc
jsonrpc 
2 бд
одна sqllite или mysql
вторая в опретивке (может переодически на жесткий сохраняться) mem cash, reddis, ram
defer main делать синк системы

---Тэги---
1 - 1024 Системные функции(шифрование еще что то):
1 ошибка
2 посылает публичный ключ

1025 - 2048 хаб:
1025 нужно подключиться по tcp к хабу
1026 сообщает ip сервера

2049 - 3072 серверы:

3073-4096 роутеры(клиенты):
3073 отправляет телеметрию
3074 запрос на получение ip сервера

---httpServer api---
GET /
POST /?mac=mac
GET /auth
POST /auth?login=login&password=password
GET /registation
POST /registation?login=login&password=password



